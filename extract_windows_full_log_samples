#!/bin/bash

#
# extract_windows_full_log_samples (part of the Blue Wolf Ninja Wazuh Windows Logtest helper suite
# by Kevin Branch (@BlueWolfNinja)
# https://bluewolfninja.com
# 
# Authoritatively available from:
# https://github.com/BlueWolfNinja/wazuh-resources
#
# Explained in this blog article
# https://bluewolfninja.com/simulating-wazuh-analysis-of-sample-windows-events
#
# This script extracts unescaped JSON full_log field samples from the current Wazuh manager archives.json file, 
# of a specific Windows EventID or Wazuh alert rule ID, usually for the purpose of doing a Wazuh logtest on such samples, 
# by using the companion script "wazuh-logtest-eventchanne" also available from the above Github repo.  
#
# To have anything to extract, you must first make your Wazuh manager write to archives.json with all events, not just alerts, and to include the full_log 
# field normally suppressed in Wazuh alert records.  Do this by running the companion script "enable-wazuh-archives" and after enough archives.json records 
# have accumulated, disable writing to archives.json by running the companion script "disable-wazuh-archives".        
#
TYPE=$1
ID=$2
if [[ "$ID" == "" || ( "$TYPE" != "rule" && "$TYPE" != "event" ) ]]; then
        echo ""
        echo "Specify a type and ID number to search the current archives.json file for unescaped full_log JSON samples of a Wazuh rule ID or Windows EventID."
        echo ""
        echo "For example:"
        echo "   extract_windows_full_log_samples rule 61615"
        echo "   extract_windows_full_log_samples event 13"
        echo ""
        echo "The results can be fed to the wazuh-logtest-eventchannel script."
        echo ""
        echo "For example, to extract the first archives.json sample of an alert on Wazuh Windows rule 61615 and do a verbose Wazuh logtest on it, run:"
        echo "   extract_windows_full_log_samples rule 61615 | head -n1 | wazuh-logtest-eventchannel -v"
        echo ""
        exit
fi
if [[ ! `which jq` ]]; then
        echo "The jq tool is required by this script.  One of these command should install it, depending on your Linux distro:"
        echo ""
        echo "   sudo apt install jq"
        echo "   sudo yum install jq"
        echo "   sudo dnf install jq"
        echo "   sudo snap install jq"
        echo ""
fi
if [[ "$TYPE" == "rule" ]]; then
        grep --line-buffered -F '"'$ID'"' /var/ossec/logs/archives/archives.json | jq --unbuffered -c 'select ( .rule.id == "'$ID'" ) | .full_log' | sed -u 's/\\"/"/g;s/\\\\/\\/g;s/^"//;s/"$//'
elif [[ "$TYPE" == "event" ]]; then
        grep --line-buffered -F '"'$ID'"' /var/ossec/logs/archives/archives.json | jq --unbuffered -c 'select ( .data.win.system.eventID == "'$ID'" ) | .full_log' | sed -u 's/\\"/"/g;s/\\\\/\\/g;s/^"//;s/"$//'
fi
